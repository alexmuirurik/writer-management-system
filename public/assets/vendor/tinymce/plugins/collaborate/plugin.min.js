// collaboration/plugin.js
tinymce.PluginManager.add('collaborate', function (editor) { 
    // Flag to prevent sending the same change event multiple times
    var isSendingChange = false;
    var editorChangeHandlerId;
    var editorupdate;

    // Function to receive updates from the server and apply them to the editor content
    function receiveUpdates() {
        $.ajax({
            type: "POST",
            url: window.location.href,
            data: {
                'collaborate': 'collaborate'
            },
            success: function (msg) {
                var transformedContent = applyTransformations(msg, editor.getContent());
                var transformedSelection = transformSelection(editor.selection.getBookmark(), editor.selection.getBookmark());
                updateEditorContent(transformedContent, transformedSelection);
                clearTimeout(editorupdate)

                editorupdate = setTimeout(receiveUpdates, 10000);
            }
        })
    }

    // Function to apply transformations using ot.js
    function applyTransformations(receivedContent, currentContent) {
        // Apply your operational transform logic here using ot.js
        var operation = ot.TextOperation.fromJSON(receivedContent);
        var transformedContent = operation.apply(currentContent);

        return transformedContent;
    }

    // Function to transform the received selection based on local selection
    function transformSelection(receivedSelection, localSelection) {
        // Apply your transformation logic here to handle user cursors
        // Example: Adjust the received selection based on local selection offsets
        // transformedSelection = adjustSelection(receivedSelection, localSelection);
        return receivedSelection; // Placeholder, replace with actual implementation
    }

    // Function to update the editor content and selection
    function updateEditorContent(content, selection) {
        isSendingChange = true;
        editor.setContent(content);
        editor.selection.moveToBookmark(selection);
        isSendingChange = false;
    }

    // Register the 'change' event listener
    editor.on('paste change input undo redo', function () {
        clearTimeout(editorChangeHandlerId)
        editorChangeHandlerId = setTimeout(function() {
            autosaver(editor.selection.getBookmark());
        }, 5000)
    })
});


